#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CRM")]
	public partial class DataClassesFiltersDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcategories_type(categories_type instance);
    partial void Updatecategories_type(categories_type instance);
    partial void Deletecategories_type(categories_type instance);
    #endregion
		
		public DataClassesFiltersDataContext() : 
				base(global::CRM.Properties.Settings.Default.CRMConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFiltersDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFiltersDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFiltersDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesFiltersDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<categories_type> categories_types
		{
			get
			{
				return this.GetTable<categories_type>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_category;
		
		private string _name;
		
		private int _id_categories_types;
		
		private System.Nullable<bool> _show_on_list;
		
		private EntityRef<categories_type> _categories_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_categoryChanging(int value);
    partial void Onid_categoryChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onid_categories_typesChanging(int value);
    partial void Onid_categories_typesChanged();
    partial void Onshow_on_listChanging(System.Nullable<bool> value);
    partial void Onshow_on_listChanged();
    #endregion
		
		public category()
		{
			this._categories_type = default(EntityRef<categories_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_category", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_category
		{
			get
			{
				return this._id_category;
			}
			set
			{
				if ((this._id_category != value))
				{
					this.Onid_categoryChanging(value);
					this.SendPropertyChanging();
					this._id_category = value;
					this.SendPropertyChanged("id_category");
					this.Onid_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_categories_types", DbType="Int NOT NULL")]
		public int id_categories_types
		{
			get
			{
				return this._id_categories_types;
			}
			set
			{
				if ((this._id_categories_types != value))
				{
					if (this._categories_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_categories_typesChanging(value);
					this.SendPropertyChanging();
					this._id_categories_types = value;
					this.SendPropertyChanged("id_categories_types");
					this.Onid_categories_typesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_on_list", DbType="Bit")]
		public System.Nullable<bool> show_on_list
		{
			get
			{
				return this._show_on_list;
			}
			set
			{
				if ((this._show_on_list != value))
				{
					this.Onshow_on_listChanging(value);
					this.SendPropertyChanging();
					this._show_on_list = value;
					this.SendPropertyChanged("show_on_list");
					this.Onshow_on_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categories_type_category", Storage="_categories_type", ThisKey="id_categories_types", OtherKey="id_categories_types", IsForeignKey=true)]
		public categories_type categories_type
		{
			get
			{
				return this._categories_type.Entity;
			}
			set
			{
				categories_type previousValue = this._categories_type.Entity;
				if (((previousValue != value) 
							|| (this._categories_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._categories_type.Entity = null;
						previousValue.categories.Remove(this);
					}
					this._categories_type.Entity = value;
					if ((value != null))
					{
						value.categories.Add(this);
						this._id_categories_types = value.id_categories_types;
					}
					else
					{
						this._id_categories_types = default(int);
					}
					this.SendPropertyChanged("categories_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categories_types")]
	public partial class categories_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_categories_types;
		
		private string _name;
		
		private int _alias;
		
		private System.Nullable<bool> _show_on_list;
		
		private EntitySet<category> _categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_categories_typesChanging(int value);
    partial void Onid_categories_typesChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaliasChanging(int value);
    partial void OnaliasChanged();
    partial void Onshow_on_listChanging(System.Nullable<bool> value);
    partial void Onshow_on_listChanged();
    #endregion
		
		public categories_type()
		{
			this._categories = new EntitySet<category>(new Action<category>(this.attach_categories), new Action<category>(this.detach_categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_categories_types", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_categories_types
		{
			get
			{
				return this._id_categories_types;
			}
			set
			{
				if ((this._id_categories_types != value))
				{
					this.Onid_categories_typesChanging(value);
					this.SendPropertyChanging();
					this._id_categories_types = value;
					this.SendPropertyChanged("id_categories_types");
					this.Onid_categories_typesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alias", DbType="Int NOT NULL")]
		public int alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if ((this._alias != value))
				{
					this.OnaliasChanging(value);
					this.SendPropertyChanging();
					this._alias = value;
					this.SendPropertyChanged("alias");
					this.OnaliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_on_list", DbType="Bit")]
		public System.Nullable<bool> show_on_list
		{
			get
			{
				return this._show_on_list;
			}
			set
			{
				if ((this._show_on_list != value))
				{
					this.Onshow_on_listChanging(value);
					this.SendPropertyChanging();
					this._show_on_list = value;
					this.SendPropertyChanged("show_on_list");
					this.Onshow_on_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categories_type_category", Storage="_categories", ThisKey="id_categories_types", OtherKey="id_categories_types")]
		public EntitySet<category> categories
		{
			get
			{
				return this._categories;
			}
			set
			{
				this._categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.categories_type = this;
		}
		
		private void detach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.categories_type = null;
		}
	}
}
#pragma warning restore 1591
